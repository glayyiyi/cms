<?php
/**
 * [WeEngine System] Copyright (c) 2013 WE7.CC
 */
require_once "weiservice-network.php";

if (! function_exists ( 'initNewWeAccount' )) :
	function initNewWeAccount() {
		// global $weAccount;
		// echo '======初始化新weAccount======';
		$current = get_option ( 'weiservice-basic' );
		$userName = $current ['weixin_account'];
		$password = $current ['weixin_password'];
		if ($password)
			$password = md5 ( $password );
			
			// $userName = 'ilovelife100';
			// $password = '0a97052f3305c8d6dc75933b71631387';
		$weixinRootUrl = 'https://mp.weixin.qq.com';
		$weAccount = new WeAccount ( $userName, $password, $weixinRootUrl );
		return $weAccount;
	}



endif;

if (! function_exists ( 'get_post_excerpt' )) {
	function get_post_excerpt($post, $width = 320) {
		$post_excerpt = strip_tags ( $post->post_excerpt );
		if (! $post_excerpt) {
			$post_excerpt = mb_strimwidth ( strip_tags ( do_shortcode ( $post->post_content ) ), 0, $width, '...', 'utf-8' );
		}
		return $post_excerpt;
	}
}

if (! function_exists ( 'get_post_first_image' )) {
	function get_post_first_image($post_content) {
		preg_match_all ( '|<img.*?src=[\'"](.*?)[\'"].*?>|i', $post_content, $matches );
		if ($matches) {
			return $matches [1] [0];
		} else {
			return false;
		}
	}
}

if (! function_exists ( 'get_post_first_audio' )) {
	function get_post_first_audio($post_content) {
		$pattern = "/<a ([^=]+=['\"][^\"']+['\"] )*href=['\"](([^\"']+\.mp3))['\"]( [^=]+=['\"][^\"']+['\"])*>([^<]+)<\/a>/i";
		preg_match_all ( $pattern, $post_content, $matches );
		//print_r ( $matches );
		$pat2 = '|\[audio.*?mp3=[\'"](.*?)[\'"].*?\]|i';
		preg_match_all ( $pat2, $post_content, $matches2 );
		//print_r ( $matches2 );
		if ($matches2 [1] [0]) {
			return $matches2 [1] [0];
		} else if ($matches [2] [0]) {
			return $matches [2] [0];
		} else {
			return false;
		}
	}
}

/**
 * 微信公众平台处理类
 */
class WeAccount {
	
	// define ( '$this->weixinRootUrl', 'https://mp.weixin.qq.com' );
	// define ( 'USER_NAME', 'ilovelife100' );
	// define ( 'PASSWORD', '0a97052f3305c8d6dc75933b71631387' );
	// define ( 'PASSWORD', md5 ( 'glay780917' ) );
	private $weixinRootUrl;
	private $weixin_login_token;
	private $weixin_login_cookie;
	
	/**
	 * 初始化，判断此次请求是否为验证请求，并以数组形式保存
	 *
	 * @param string $token
	 *        	验证信息
	 * @param boolean $debug
	 *        	调试模式，默认为关闭
	 */
	public function __construct($userName='ilovelife100', $password='0a97052f3305c8d6dc75933b71631387', $weixinRootUrl='https://mp.weixin.qq.com') {
		$this->weixinRootUrl = $weixinRootUrl;
		$reponse = $this->account_weixin_login ( $userName, $password, $weixinRootUrl);
		if (! $reponse) {
			// echo '微信account类初始化失败';
		} else {
			$data = json_decode ( $reponse ['content'], true );
			// //print_r($reponse);
			if ($data ['ErrCode'] == 0) {
				$cookie = implode ( '; ', $reponse ['headers'] ['Set-Cookie'] );
				// echo "\n" . "===============cookie============" . $cookie;
				$this->weixin_login_cookie = $cookie;
			}
			// echo '=====start init weixin root url=====' . $this->weixinRootUrl;
			// echo '=====start init cookie=====' . $this->weixin_login_cookie;
			// echo '=====start init cookie=====' . $this->get_weixin_login_cookie ( $userName, $password, $weixinRootUrl );
		}
	}
	
	// function get_weixin_login_token($userName, $password, $weixinRootUrl) {
	// $reponse = $this->account_weixin_login ( $userName, $password, $weixinRootUrl );
	// if ($reponse != false) {
	// $data = json_decode ( $reponse ['content'], true );
	// if ($data ['ErrCode'] == 0) {
	// preg_match ( '/token=([0-9]+)/', $data ['ErrMsg'], $match );
	// $token = $match [1];
	// // echo "\n" . "===============token============" . $token;
	// return $match [1];
	// } else
	// return false;
	// }
	// }
	// function get_weixin_login_cookie($userName, $password, $weixinRootUrl) {
	// $reponse = $this->account_weixin_login ( $userName, $password, $weixinRootUrl );
	// if ($reponse != false) {
	// $data = json_decode ( $reponse ['content'], true );
	// // //print_r($reponse);
	// if ($data ['ErrCode'] == 0) {
	// $cookie = implode ( '; ', $reponse ['headers'] ['Set-Cookie'] );
	// // echo "\n" . "===============cookie============" . $cookie;
	// return $cookie;
	// } else
	// return false;
	// }
	// }
	function account_weixin_login($userName, $password, $weixinRootUrl) {
		// echo '=========start login=======';
		$loginurl = $weixinRootUrl . '/cgi-bin/login?lang=zh_CN';
		$post = array (
				'username' => $userName,
				'pwd' => $password,
				'imgcode' => '',
				'f' => 'json' 
		);
		
		$referer = $this->weixinRootUrl . '/';
		$response = weixin_http_request ( $loginurl, $post, array (
				'CURLOPT_REFERER' => $referer
		) );
		
		//$response = weixin_http_request ( $loginurl, $post );
		//var_dump($response);
		$data = json_decode ( $response ['content'], true );
		
		if ($data ['ErrCode'] == 0) {
			preg_match ( '/token=([0-9]+)/', $data ['ErrMsg'], $match );
			$this->weixin_login_token = $match [1];
			// $cookie = implode ( '; ', $reponse ['headers'] ['Set-Cookie'] );
			return $response;
		} else {
			switch ($data ['ErrCode']) {
				case "-1" :
					$msg = "系统错误，请稍候再试。";
					break;
				case "-2" :
					$msg = "微信公众帐号或密码错误。";
					break;
				case "-3" :
					$msg = "微信公众帐号密码错误，请重新输入。";
					break;
				case "-4" :
					$msg = "不存在该微信公众帐户。";
					break;
				case "-5" :
					$msg = "您的微信公众号目前处于访问受限状态。";
					break;
				case "-6" :
					$msg = "登录受限制，需要输入验证码，稍后再试！";
					break;
				case "-7" :
					$msg = "此微信公众号已绑定私人微信号，不可用于公众平台登录。";
					break;
				case "-8" :
					$msg = "微信公众帐号登录邮箱已存在。";
					break;
				case "-200" :
					$msg = "因您的微信公众号频繁提交虚假资料，该帐号被拒绝登录。";
					break;
				case "-94" :
					$msg = "请使用微信公众帐号邮箱登陆。";
					break;
				case "10" :
					$msg = "该公众会议号已经过期，无法再登录使用。";
					break;
				default :
					$msg = "未知的返回。";
			}
			 echo "\n" . '=======Wei Xin Login Error:======' . $msg;
			return false;
		}
	}
	function account_weixin_basic() {
		$response = $this->account_weixin_http ( $this->weixinRootUrl . '/cgi-bin/userinfopage?t=wxm-setting&lang=zh_CN' );
		$info = array ();
		preg_match ( '/FakeID.*?"([0-9]+?)"/', $response ['content'], $match );
		$fakeid = $match [1];
		preg_match ( '/(\{"username.*\})/', $response ['content'], $match );
		$info = json_decode ( $match [1], true );
		// $image = $this->account_weixin_http($this->weixinRootUrl . '/cgi-bin/getheadimg?fakeid='.$fakeid);
		// file_write(IA_ROOT . '/' . $GLOBALS['_W']['config']['upload']['attachdir'] . 'headimg_'.$wechat['weid'].'.jpg', $image['content']);
		// $image = $this->account_weixin_http($this->weixinRootUrl . '/cgi-bin/getqrcode?fakeid='.$fakeid.'&style=1&action=download');
		// file_write(IA_ROOT . '/' . $GLOBALS['_W']['config']['upload']['attachdir'] . 'qrcode_'.$wechat['weid'].'.jpg', $image['content']);
		preg_match ( '/(gh_[a-z0-9A-Z]+)/', $response ['meta'], $match );
		$info ['original'] = $match [1];
		preg_match ( '/NickName \: "(.+?)"/', $response ['content'], $match );
		$info ['name'] = $match [1];
		// echo "======account_weixin_basic============";
		// print_r ( $info );
		
		return $info;
	}
	function account_weixin_http($url, $post = '') {
		// echo "\n" . '=====account_weixin_http start=====:' . $request_url;
		// $cookie = get_weixin_login_cookie ();
		// $token = get_weixin_login_token ();
		
		$request_url = $url . '&token=' . $this->weixin_login_token;
		
		return weixin_http_request ( $request_url, $post, array (
				'CURLOPT_COOKIE' => $this->weixin_login_cookie,
				'CURLOPT_REFERER' => $request_url
		) );
	}
	/**
	 * 获取用户的信息
	 *
	 * @param string $id
	 *        	用户的uid(即FakeId)
	 * @return array {FakeId:100001,NickName:'昵称',Username:'用户名',Signature:'签名档',Country:'中国',Province:'广东',City:'广州',Sex:'1',GroupID:'0'}
	 */
	function get_weixin_user_info($id) {
		
		$request_url = $this->weixinRootUrl . "/cgi-bin/getcontactinfo?t=ajax-getcontactinfo&lang=zh_CN&fakeid=" . $id;
	
		$referer = $this->weixinRootUrl . '/';
		$post = array (
				'ajax' => 1,
				'token' => $this->weixin_login_token 
		);
		$response = weixin_http_request ( $request_url, $post, array (
				'CURLOPT_COOKIE' => $this->weixin_login_cookie,
				'CURLOPT_REFERER' => $referer 
		) );
		$result = json_decode ( $response ['content'], 1 );
		// print_r ( "===========get_weixin_user_info==========" );
		//print_r ( $result );
		
		if (! $result || empty ( $result ['FakeId'] )) {
			return false;
		}
		//print_r ( $result );
		return $result;
	}
	function account_weixin_userlist($groupid = 0, $psize = 100) {
		//$url = $this->weixinRootUrl . '/cgi-bin/contactmanagepage?t=wxm-friend&lang=zh_CN&groupid=' . $groupid . '&pagesize=' . $psize;
		$url = $this->weixinRootUrl . '/cgi-bin/contactmanage?t=user/index&pagesize='.$psize.'&pageidx=0&type=0&groupid='.$groupid.'&token='.$this->weixin_login_token.'&lang=zh_CN';
		//$response = $this->account_weixin_http ( $url );
		$response = weixin_http_request ( $url, $post, array (
				'CURLOPT_COOKIE' => $this->weixin_login_cookie,
				'CURLOPT_REFERER' => 'https://mp.weixin.qq.com/cgi-bin/home?t=home/index&lang=zh_CN&token='.$this->weixin_login_token
		) );
		var_dump ( $response );
		$html = $response ['content'];
		
		preg_match ( '/PageCount \: \'(\d+)\'/', $html, $match );
		$total = $match [1];
		// print_r ( "=======account_weixin_userlist 总数：============" );
		// echo "======Total page count=======" . $match [1];
		preg_match_all ( '/"fakeId" : "([0-9]+?)"/', $html, $match );
		//print_r ( $match [1] );
		return $match [1];
	}
	function account_weixin_userlistInfo($groupid = 0, $psize = 99999) {
		//https://mp.weixin.qq.com/cgi-bin/contactmanage?t=user/index&pagesize=10&pageidx=0&type=0&groupid=0&token=1771674578&lang=zh_CN
		//$url = $this->weixinRootUrl . '/cgi-bin/contactmanagepage?t=wxm-friend&lang=zh_CN&groupid=' . $groupid . '&pagesize=' . $psize;
		$url = $this->weixinRootUrl . '/cgi-bin/contactmanage?t=user/index&pagesize='.$psize.'&pageidx=0&type=0&groupid='.$groupid.'&token='.$this->weixin_login_token.'&lang=zh_CN';
		$response = $this->account_weixin_http ( $url );
		// echo "======account_weixin_userlist==========";
		$html = $response ['content'];
		// print_r ( $html );
		return $html;
	}
	function account_weixin_send($uid, $message) {
		// $cookie = get_weixin_login_cookie ();
		// $token = get_weixin_login_token ();
		if ($uid && $message) {
			$url = $this->weixinRootUrl . '/cgi-bin/singlesend?t=ajax-response&lang=zh_CN';
			$post = array (
					'ajax' => 1,
					'content' => $message,
					'error' => false,
					'tofakeid' => $uid,
					'token' => $this->weixin_login_token,
					'type' => 1 
			);
			
			$response = weixin_http_request ( $url, $post, array (
					'CURLOPT_COOKIE' => $this->weixin_login_cookie,
					'CURLOPT_REFERER' => $this->weixinRootUrl . '/cgi-bin/singlemsgpage?token=' . $this->weixin_login_token . '&fromfakeid=' . $uid . '&msgid=&source=&count=20&t=wxm-singlechat&lang=zh_CN'
					//https://mp.weixin.qq.com/cgi-bin/singlemsgpage?msgid=&source=&count=20&t=wxm-singlechat&fromfakeid=1121610100&token=1771674578&lang=zh_CN
						) );
		}
		// print_r ( "=======account_weixin_send==".$post[content]."消息已发送============" );
		print_r($response);
		 return $response;
	}
	function getRecentMessages($fakeid) {
		// $cookie = get_weixin_login_cookie ();
		// $token = get_weixin_login_token ();
		$request_url = $this->weixinRootUrl . "/cgi-bin/singlemsgpage?count=200&t=ajax-single-getnewmsg&lang=zh_CN";
		$post = array (
				'fromfakeid' => $fakeid,
				'token' => $this->weixin_login_token,
				'opcode' => 1,
				'ajax' => 1 
		);
		$response = weixin_http_request ( $request_url, $post, array (
				'CURLOPT_COOKIE' => $this->weixin_login_cookie,
				'CURLOPT_REFERER' => $this->weixinRootUrl . '/cgi-bin/singlemsgpage?token=' . $this->weixin_login_token . '&fromfakeid=' . $uid . '&msgid=&source=&count=20&t=wxm-singlechat&lang=zh_CN'
				//https://mp.weixin.qq.com/cgi-bin/singlemsgpage?msgid=&source=&count=20&t=wxm-singlechat&fromfakeid=1121610100&token=1771674578&lang=zh_CN
		) );
		
		$result = json_decode ( $response ['content'], 1 );
		// print_r ( "===========getRecentMessages==========" );
		// print_r ( $result );
		if (! $result) {
			return false;
		}
		return $result;
	}
	/**
	 * 将用户放入制定的分组
	 *
	 * @param array $fakeidsList        	
	 * @param string $groupid        	
	 * @return boolean 放入是否成功
	 */
	function putIntoGroup($fakeidsList, $groupid) {
		if (! empty ( $fakeidsList )) {
			$fakeidsListString = "";
			if (is_array ( $fakeidsList )) {
				foreach ( $fakeidsList as $value ) {
					$fakeidsListString .= $value . "|";
				}
			} else {
				$fakeidsListString = $fakeidsList;
			}
			
			// $cookie = get_weixin_login_cookie ();
			// $token = get_weixin_login_token ();
			$request_url = $this->weixinRootUrl . "/cgi-bin/modifycontacts?action=modifycontacts&t=ajax-putinto-group";
			
			$post = array (
					'contacttype' => $groupid,
					'tofakeidlist' => $fakeidsListString,
					'token' => $this->weixin_login_token,
					'ajax' => 1 
			);
			// //print_r ( "===========将用户放入制定的分组==========" );
			// //print_r ( $post );
			$response = weixin_http_request ( $request_url, $post, array (
					'CURLOPT_COOKIE' => $this->weixin_login_cookie,
					'CURLOPT_REFERER' => $this->weixinRootUrl . '/?token=' . $this->weixin_login_token
			) );
			$tmp = json_decode ( $response ['content'], 1 );
			$result = $tmp ['ret'] == "0" && ! empty ( $tmp ) ? true : false;
			
			// print_r ( "===========将用户:[".$fakeidsListString."]放入指定的分组==========" . $result );
			return $result;
		}
		return false;
	}
	
	function getAndUpdateUserInfo($openId) {
		if ($openId) {
			// For Debug
			// echo '=========open_id==========' . $openId;
			// $fromUsername = $openId . time ();
			$fromUsername = $openId;
			$user = null;
			$user_obj = get_user_by ( 'login', $fromUsername );
			if ($user_obj) {
				$user = $user_obj->to_array ();
				// Add additional custom fields
				foreach ( _get_additional_user_keys ( $user_obj ) as $key ) {
					$user [$key] = get_user_meta ( $user ['ID'], $key, true );
				}
	
				// Escape data pulled from DB.
				$user = add_magic_quotes ( $user );
				// echo '========get user==========';
				// print_r ( $user );
			}
			if ($user && $user ['user_url'] && $user['user_nicename']) {
				$fakeid = substr ( trim ( $user ['user_url'] ), 7 ); // 去除前面固定的http://
				// echo '================从旧用户找到fakeId========' . $fakeid;
				$userInfo = array (
						'FakeId'=>$fakeid,
						'Username'=>$user['user_nicename'],
						'NickName'=> $user['nickname']
				);
				//$userInfo = $this->get_weixin_user_info ( $fakeid );
				return $userInfo;
			}
			if (! $user) {
				$userdata = array (
						'user_login' => $fromUsername,
						'user_pass' => "1234",
						'user_email' => $fromUsername . "@appcn100.com"
	
				);
				$user_id = wp_insert_user ( $userdata );
				if ($user_id) {
					// echo ('注册新用户成功，用户ID：' . $user_id);
					$user_obj = get_user_by ( 'id', $user_id );
					$user = $user_obj->to_array ();
				}
			}
			return false;
		}
		else 
			return false;
	}
	
	
	
	function getAndUpdateUserInfoWithMatchedFakeId($openId) {
		if ($openId) {
			// For Debug
			//echo '=========open_id==========' . $openId;
			// $fromUsername = $openId . time ();
			$fromUsername = $openId;
// 			$user = null;
// 			$user_obj = get_user_by ( 'login', $fromUsername );
// 			if ($user_obj) {
// 				$user = $user_obj->to_array ();
// 				// Add additional custom fields
// 				foreach ( _get_additional_user_keys ( $user_obj ) as $key ) {
// 					$user [$key] = get_user_meta ( $user ['ID'], $key, true );
// 				}
				
// 				// Escape data pulled from DB.
// 				$user = add_magic_quotes ( $user );
// 				// echo '========get user==========';
// 				// print_r ( $user );
// 			}
// 			if ($user && $user ['user_url'] && $user['user_nicename']) {
// 				$fakeid = substr ( trim ( $user ['user_url'] ), 7 ); // 去除前面固定的http://
// 				                                                     // echo '================从旧用户找到fakeId========' . $fakeid;
// 				$userInfo = array (
// 						'FakeId'=>$fakeid,
// 						 'Username'=>$user['user_nicename'],
// 						'NickName'=> $user['nickname']
// 				);
// 				//$userInfo = $this->get_weixin_user_info ( $fakeid );
// 				return $userInfo;
// 			}
// 			if (! $user) {
// 				$userdata = array (
// 						'user_login' => $fromUsername,
// 						'user_pass' => "1234",
// 						'user_email' => $fromUsername . "@appcn100.com"
						
// 				);
// 				$user_id = wp_insert_user ( $userdata );
// 				if ($user_id) {
// 					// echo ('注册新用户成功，用户ID：' . $user_id);
// 					$user_obj = get_user_by ( 'id', $user_id );
// 					$user = $user_obj->to_array ();
// 				}
// 			}
			
			echo '获取好友列表';
			$unfriendList = $this->account_weixin_userlist ( 0 );
			print_r($unfriendList);
			if ($unfriendList) {
				
				//$openIdsub = substr ( md5 ( $openId ), 0, 16 );
				$openIdsub = $openId ;
				//print_r ( '============$openId Sub:' . $openIdsub);
				foreach ( $unfriendList as $value ) {
					$fakeid = $value;
					// print_r ( '===========fakeId=' . $fakeid);
					$recentMessages = $this->getRecentMessages ( $fakeid );
					foreach ( $recentMessages as $messageValue ) {
						print_r ( '=============message content:' . $messageValue ['content']);
						if (false !== strpos ( strtolower($messageValue ['content']), strtolower($openIdsub) )) {
							// echo '=======找到匹配的fake_id======' . $fakeid;
							// $this->putIntoGroup ( $fakeid, 2 );
							// $user = get_user_by ( 'login', $openId );
							$userInfo = $this->get_weixin_user_info ( $fakeid );
							if ($userInfo && $user) {
								$email_prefix = empty ( $fakeid ) ? $fromUsername : $fakeid;
								// print_r ( $user );
								$userdata = array (
										'ID' => $user ['ID'],
										'user_nicename' => $userInfo ['Username'],
										'nickname' => $userInfo ['NickName'],
										'display_name' => $userInfo ['NickName'],
										'user_email' => $email_prefix . "@appcn100.com",
										'user_url' => $fakeid,
										'wechat' => $userInfo ['Username']
										
								// 'role'=>"subscriber"
																);
								$user_id = wp_update_user ( $userdata );
								if ($user_id)
									$this->putIntoGroup ( $fakeid, 2 );
								// echo ('更新成功，用户ID：' . $user_id);
							}
							return $userInfo;
						}
					}
				}
			}
			return false;
		}
		else 
			return false;
	}
}


